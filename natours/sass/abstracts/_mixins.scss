@mixin clearfix {
	// appends a pseudo element after the element
	&::after {
		content: "";
		display: table;
		clear: both;
	}
}

@mixin absCenter {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER
/* 
0-600px:        phone
600 - 900px:    ablet portrait
900 - 1200px:   tablet landscape
1200 - 1800px:  normal styles
1800px+:        big desktop       
*/

@mixin respond-phone {
	// content allows you to pass a block of code into a mixin
	@media (max-width: 600px) {
		@content;
	}
}

/* 
$breakpoint argument choices:
- phone
- tab-port
- tab-land
- big-desktop
*/

// ORDER in which to ass all the media queries
// base + typygraphy > general layout + grid > page layout > components

// 1rem=16px
// ems used because of browsr support problems of rems in media queries
// 1em or rem in a media query is = to the default font size of the browser
@mixin respond($breakpoint) {
	@if $breakpoint == phone {
		// 600px/16 the screen means they wont apply if you try to print them out
		@media only screen and (max-width: 37.5em) {
			@content;
		}
	}
	// 900px/16
	@if $breakpoint == tab-port {
		@media only screen and (max-width: 56.25em) {
			@content;
		}
	}
	// 1200px/16
	@if $breakpoint == tab-land {
		@media only screen and (max-width: 75em) {
			@content;
		}
	}
	// 1200 - 1800 are the normal styles
	// 1800px/16
	@if $breakpoint == big-desktop {
		@media only screen and (min-width: 112.5em) {
			@content;
		}
	}
}
